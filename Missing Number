//leetcode 
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        int n=nums.size();
        int sumOfN=(n*(n+1))/2;
        int sumOfnums=0;
        for(int i=0;i<n;i++){
            sumOfnums=sumOfnums+nums[i];
        }
        return sumOfN-sumOfnums;
    }
};

//method-2
//Time Complexity: O(n log n)
//Space Complexity: O(log n) (due to the sorting operation)
class Solution {
public:
    int missingNumber(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        for(int i=0;i<nums.size();i++){
            if(nums[i]!=i){
                return i;
            }
        }
        return nums.size();
    }
};
