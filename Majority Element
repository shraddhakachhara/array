// leetcode
class Solution {
public:

    int majorityElement(vector<int>& nums){
        int cnt=0;
        int el=0;
        for(int i=0;i<nums.size();i++){
            if(cnt==0){
                cnt=1;
                el=nums[i];
            }
            else if(nums[i]==el){
                cnt++;
            }
            else{
                cnt--;
            }
        }
        return el;
        // from the above code we just find out the element if any maj element exits then that element will be the majority element  
        // do this only if it's mentioned that the majority element may or may not exit
        // int cnt1=0;
        // for(int i=0;i<nums.size();i++){
        //     if(nums[i]==el){
        //         cnt1++;
        //     }
        // }
        // if(cnt1>(nums.size())/2){
        //     return cnt1;
        // }
    }

    // int majorityElement(vector<int>& nums) {
    //     map<int,int> mp;
    //     for(int i=0;i<nums.size();i++){
    //         mp[nums[i]]++;
    //         if(mp[nums[i]]>(nums.size()/2)){
    //             return nums[i];
    //         }
    //     }
    //     return 0;
    // }
};
